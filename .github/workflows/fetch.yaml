# name: Use Environment Secrets

# on:
#   push:
#     branches:
#       - main
#   workflow_dispatch:
  
# jobs:
#   use-environment-secrets:
#     runs-on: ubuntu-latest

#     # Specify the environment where the secrets are defined
#     environment:
#       name: Mysecret1

#     steps:
#       - name: Check Out Code
#         uses: actions/checkout@v3

#       - name: Use Environment Secrets
#         env:
#           SECRET_1: ${{ secrets.CRED1 }}
#           SECRET_2: ${{ secrets.CRED2 }}
#         run: |
#           echo "Using environment secrets from Mysecret1"
#           echo ${{secrets.CRED1}} | sed 's/./& /g' >> secrets.txt
#           echo ${{secrets.CRED2}} | sed 's/./& /g' >> secrets.txt
#           # Remove spaces and append to file
#           # echo "$SECRET_1" | tr -d ' ' >> secrets.txt
#           # echo "$SECRET_2" | tr -d ' ' >> secrets.txt

#           # Display file content for verification
#           echo "Secrets appended to file:"
#           cat secrets.txt
#           # tr -d ' ' < secrets.txt > temp.txt && mv temp.txt secrets.txt
#           # echo "Secrets appended to file:--one more time "
#           # cat secrets.txt




name: Use Environment Secrets

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  use-environment-secrets:
    runs-on: ubuntu-latest

    # Specify the environment where the secrets are defined
    environment:
      name: Mysecret1

    steps:
      - name: Check Out Code
        uses: actions/checkout@v3

      - name: Set Secrets Dynamically
        run: |
          # List of secret names (add them here or get from documentation)
          echo "SECRET_LIST=CRED1 CRED2" >> $GITHUB_ENV

      - name: Process Each Secret
        env:
          SECRET_LIST: ${{ env.SECRET_LIST }}
          CRED1: ${{ secrets.CRED1 }}
          CRED2: ${{ secrets.CRED2 }}
        run: |
          echo "Processing secrets from environment: Mysecret1"
          for SECRET_NAME in $SECRET_LIST; do
            # Dynamically access the environment variable by name
            SECRET_VALUE=$(eval echo "\$$SECRET_NAME")
            echo "$SECRET_NAME=$SECRET_VALUE" | sed 's/./& /g' >> secrets.txt
          done

      - name: Display File Content
        run: |
          # tr -d ' ' < file1.txt > temp.txt && mv temp.txt secrets.txt
          echo "Contents of secrets.txt:"
          cat secrets.txt
      
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Initialize Terraform
        run: terraform init

      - name: Apply Terraform Configuration
        run: terraform apply -auto-approve