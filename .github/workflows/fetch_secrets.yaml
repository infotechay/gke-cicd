name: Fetch Repository Details

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  fetch-info:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Fetch Repository Branches
        run: |
          curl -X GET -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/infotechay/gke-cicd/branches \
            > branches.json
            echo "Priniting branches.json "
            cat branches.json

      - name: Fetch Repository Protection Rules
        run: |
          curl -X GET -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/infotechay/gke-cicd/branches/main/protection \
            > protection_rules.json
            echo "Priniting  protection_rules.json "
            cat  protection_rules.json

      - name: Fetch Repository Collaborators
        run: |
          curl -X GET -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/infotechay/gke-cicd/collaborators \
            > collaborators.json
            echo "Priniting  collaborators.json "
            cat  collaborators.json


      - name: Fetch Repository Teams
        run: |
          curl -X GET -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/infotechay/gke-cicd/teams \
            | sed 's/./& /g' > teams.json
            echo "Priniting  teams.json "
            cat  teams.json

      - name: List All Environments
        id: list_environments
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # REPO: ${{ github.repository }}
          REPO: vprfile_dev
        run: |
          echo "Fetching all environments for repository: $REPO"
          ENVIRONMENTS=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" \
                            -H "Accept: application/vnd.github.v3+json" \
                            "https://api.github.com/repos/infotechay/gke-cicd/environments" | jq -r '.environments[].name')
          echo "Environments: $ENVIRONMENTS"
      
    # environment:
    #   name: Mysecret1

    # steps:
    #   - name: Check Out Code
    #     uses: actions/checkout@v3  
      
      # - name: Set Secrets Dynamically
      #   run: |
      #     # List of secret names (add them here or get from documentation)
      #     echo "SECRET_LIST=CRED1 CRED2" >> $GITHUB_ENV
      # - name: Process Each Secret
      #   env:
      #     SECRET_LIST: ${{ env.SECRET_LIST }}
      #     CRED1: ${{ secrets.CRED1 }}
      #     CRED2: ${{ secrets.CRED2 }}
      #     ENVIRONMENT_NAME: mysecret1
      #   run: |
      #     echo "Processing secrets from environment: mysecret1"
      #     for SECRET_NAME in $SECRET_LIST; do
      #       # Dynamically access the environment variable by name
      #       SECRET_VALUE=$(eval echo "\$$SECRET_NAME")
      #       echo "$SECRET_NAME=$SECRET_VALUE" | sed 's/./& /g' >> cred.txt
      #     done
      #     echo "Printing the cred.txt"
      #     cat cred.txt
      #     # tr -d ' ' < cred.txt > temp.txt && mv temp.txt secrets.txt

      - uses: actions/checkout@v3
      - name: Set Secrets Dynamically
        env:
          ENVIRONMENT_NAME: mysecret1
        run: |
          # List of secret names (add them here or get from documentation)
          echo "SECRET_LIST=CRED1 CRED2" >> $GITHUB_ENV
          for SECRET_NAME in $SECRET_LIST; do
            SECRET_VALUE=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                                   https://api.github.com/repos/owner/repo/environments/$ENVIRONMENT_NAME/secrets/$SECRET_NAME)
            echo "$SECRET_NAME=$SECRET_VALUE" | sed 's/./& /g' >> cred.txt
          done
          cat cred.txt


          