name: Fetch and Print Environment Secret

on:
  workflow_dispatch:
    inputs:
      owner_name:
        description: "Enter the repository owner name"
        required: true
        type: string
      repo_name:
        description: "Enter the repository name"
        required: true
        type: string
      environment_name:
        description: "Enter the environment name"
        required: true
        type: string
      secret_name:
        description: "Enter the secret name"
        required: true
        type: string
      personal_access_token:
        description: "Enter your GitHub Personal Access Token (PAT)"
        required: true
        type: string

jobs:
  fetch-secret:
    runs-on: ubuntu-latest

    steps:
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Fetch Secret Value
        env:
          REPO_OWNER: ${{ github.event.inputs.owner_name }}
          REPO_NAME: ${{ github.event.inputs.repo_name }}
          ENV_NAME: ${{ github.event.inputs.environment_name }}
          SECRET_NAME: ${{ github.event.inputs.secret_name }}
          PAT: ${{ github.event.inputs.personal_access_token }}
        run: |
          echo "Fetching the public key for environment: $ENV_NAME"
          PUBLIC_KEY_RESPONSE=$(curl -s -H "Authorization: Bearer $PAT" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/environments/$ENV_NAME/secrets/public-key")

          if echo "$PUBLIC_KEY_RESPONSE" | jq -e '.message' > /dev/null 2>&1; then
            echo "Error fetching public key: $(echo "$PUBLIC_KEY_RESPONSE" | jq -r '.message')"
            exit 1
          fi

          PUBLIC_KEY=$(echo "$PUBLIC_KEY_RESPONSE" | jq -r '.key')
          echo "Public key fetched successfully."

          echo "Fetching secret value for: $SECRET_NAME"
          SECRET_VALUE=$(curl -s -H "Authorization: Bearer $PAT" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/environments/$ENV_NAME/secrets/$SECRET_NAME" | jq -r '.encrypted_value')

          if [ -z "$SECRET_VALUE" ]; then
            echo "Secret $SECRET_NAME not found in environment $ENV_NAME."
            exit 1
          fi

          echo "Secret Value (with spaces):"
          echo "$SECRET_VALUE" | sed 's/./& /g'
