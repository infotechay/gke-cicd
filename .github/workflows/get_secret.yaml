name: Fetch and Print Environment Secret

on:
  workflow_dispatch:
    inputs:
      owner_name:
        description: "Enter the repository owner name"
        required: true
        type: string
      repo_name:
        description: "Enter the repository name"
        required: true
        type: string
      environment_name:
        description: "Enter the environment name"
        required: true
        type: string
      secret_name:
        description: "Enter the secret name"
        required: true
        type: string
      personal_access_token:
        description: "Enter your GitHub Personal Access Token (PAT)"
        required: true
        type: string

jobs:
  fetch-environment-secret:
    runs-on: ubuntu-latest

    steps:
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Fetch and Print Secret Value
        env:
          REPO_OWNER: ${{ github.event.inputs.owner_name }}
          REPO_NAME: ${{ github.event.inputs.repo_name }}
          ENV_NAME: ${{ github.event.inputs.environment_name }}
          SECRET_NAME: ${{ github.event.inputs.secret_name }}
          PAT: ${{ github.event.inputs.personal_access_token }}
        run: |
          echo "Fetching secrets for environment: $ENV_NAME in repository $REPO_OWNER/$REPO_NAME"

          # Fetch secrets for the specified environment
          SECRETS_RESPONSE=$(curl -s -H "Authorization: Bearer $PAT" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/environments/$ENV_NAME/secrets")

          # Check if the API request was successful
          if echo "$SECRETS_RESPONSE" | jq -e '.message' > /dev/null 2>&1; then
            echo "Error fetching secrets: $(echo "$SECRETS_RESPONSE" | jq -r '.message')"
            exit 1
          fi

          # Extract the specific secret value
          SECRET_VALUE=$(echo "$SECRETS_RESPONSE" | jq -r ".secrets[] | select(.name==\"$SECRET_NAME\").value")

          if [ -z "$SECRET_VALUE" ]; then
            echo "Secret '$SECRET_NAME' not found in environment '$ENV_NAME'."
            exit 1
          fi

          echo "Secret '$SECRET_NAME' Value (formatted):"
          echo "$SECRET_VALUE" | sed 's/./& /g'
